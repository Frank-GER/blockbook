// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tx.proto

/*
Package syscoin is a generated protocol buffer package.

It is generated from these files:
	tx.proto

It has these top-level messages:
	ProtoSyscoinTransaction
*/
package syscoin

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ProtoSyscoinTransaction struct {
	Txid      []byte                              `protobuf:"bytes,1,opt,name=Txid,json=txid,proto3" json:"Txid,omitempty"`
	Hex       []byte                              `protobuf:"bytes,2,opt,name=Hex,json=hex,proto3" json:"Hex,omitempty"`
	Blocktime uint64                              `protobuf:"varint,3,opt,name=Blocktime,json=blocktime" json:"Blocktime,omitempty"`
	Locktime  uint32                              `protobuf:"varint,4,opt,name=Locktime,json=locktime" json:"Locktime,omitempty"`
	Height    uint32                              `protobuf:"varint,5,opt,name=Height,json=height" json:"Height,omitempty"`
	Vin       []*ProtoSyscoinTransaction_VinType  `protobuf:"bytes,6,rep,name=Vin,json=vin" json:"Vin,omitempty"`
	Vout      []*ProtoSyscoinTransaction_VoutType `protobuf:"bytes,7,rep,name=Vout,json=vout" json:"Vout,omitempty"`
	Version   int32                               `protobuf:"varint,8,opt,name=Version,json=version" json:"Version,omitempty"`
}

func (m *ProtoSyscoinTransaction) Reset()                    { *m = ProtoSyscoinTransaction{} }
func (m *ProtoSyscoinTransaction) String() string            { return proto.CompactTextString(m) }
func (*ProtoSyscoinTransaction) ProtoMessage()               {}
func (*ProtoSyscoinTransaction) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ProtoSyscoinTransaction) GetTxid() []byte {
	if m != nil {
		return m.Txid
	}
	return nil
}

func (m *ProtoSyscoinTransaction) GetHex() []byte {
	if m != nil {
		return m.Hex
	}
	return nil
}

func (m *ProtoSyscoinTransaction) GetBlocktime() uint64 {
	if m != nil {
		return m.Blocktime
	}
	return 0
}

func (m *ProtoSyscoinTransaction) GetLocktime() uint32 {
	if m != nil {
		return m.Locktime
	}
	return 0
}

func (m *ProtoSyscoinTransaction) GetHeight() uint32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *ProtoSyscoinTransaction) GetVin() []*ProtoSyscoinTransaction_VinType {
	if m != nil {
		return m.Vin
	}
	return nil
}

func (m *ProtoSyscoinTransaction) GetVout() []*ProtoSyscoinTransaction_VoutType {
	if m != nil {
		return m.Vout
	}
	return nil
}

func (m *ProtoSyscoinTransaction) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

type ProtoSyscoinTransaction_AssetInfoDetailsType struct {
	Symbol   string `protobuf:"bytes,1,opt,name=Symbol,json=symbol" json:"Symbol,omitempty"`
	Decimals int32  `protobuf:"varint,2,opt,name=Decimals,json=decimals" json:"Decimals,omitempty"`
}

func (m *ProtoSyscoinTransaction_AssetInfoDetailsType) Reset() {
	*m = ProtoSyscoinTransaction_AssetInfoDetailsType{}
}
func (m *ProtoSyscoinTransaction_AssetInfoDetailsType) String() string {
	return proto.CompactTextString(m)
}
func (*ProtoSyscoinTransaction_AssetInfoDetailsType) ProtoMessage() {}
func (*ProtoSyscoinTransaction_AssetInfoDetailsType) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 0}
}

func (m *ProtoSyscoinTransaction_AssetInfoDetailsType) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *ProtoSyscoinTransaction_AssetInfoDetailsType) GetDecimals() int32 {
	if m != nil {
		return m.Decimals
	}
	return 0
}

type ProtoSyscoinTransaction_AssetInfoType struct {
	AssetGuid uint32                                        `protobuf:"varint,1,opt,name=AssetGuid,json=assetGuid" json:"AssetGuid,omitempty"`
	ValueSat  []byte                                        `protobuf:"bytes,2,opt,name=ValueSat,json=valueSat,proto3" json:"ValueSat,omitempty"`
	Details   *ProtoSyscoinTransaction_AssetInfoDetailsType `protobuf:"bytes,3,opt,name=Details,json=details" json:"Details,omitempty"`
}

func (m *ProtoSyscoinTransaction_AssetInfoType) Reset()         { *m = ProtoSyscoinTransaction_AssetInfoType{} }
func (m *ProtoSyscoinTransaction_AssetInfoType) String() string { return proto.CompactTextString(m) }
func (*ProtoSyscoinTransaction_AssetInfoType) ProtoMessage()    {}
func (*ProtoSyscoinTransaction_AssetInfoType) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 1}
}

func (m *ProtoSyscoinTransaction_AssetInfoType) GetAssetGuid() uint32 {
	if m != nil {
		return m.AssetGuid
	}
	return 0
}

func (m *ProtoSyscoinTransaction_AssetInfoType) GetValueSat() []byte {
	if m != nil {
		return m.ValueSat
	}
	return nil
}

func (m *ProtoSyscoinTransaction_AssetInfoType) GetDetails() *ProtoSyscoinTransaction_AssetInfoDetailsType {
	if m != nil {
		return m.Details
	}
	return nil
}

type ProtoSyscoinTransaction_VinType struct {
	Coinbase     string                                 `protobuf:"bytes,1,opt,name=Coinbase,json=coinbase" json:"Coinbase,omitempty"`
	Txid         []byte                                 `protobuf:"bytes,2,opt,name=Txid,json=txid,proto3" json:"Txid,omitempty"`
	Vout         uint32                                 `protobuf:"varint,3,opt,name=Vout,json=vout" json:"Vout,omitempty"`
	ScriptSigHex []byte                                 `protobuf:"bytes,4,opt,name=ScriptSigHex,json=scriptSigHex,proto3" json:"ScriptSigHex,omitempty"`
	Sequence     uint32                                 `protobuf:"varint,5,opt,name=Sequence,json=sequence" json:"Sequence,omitempty"`
	Addresses    []string                               `protobuf:"bytes,6,rep,name=Addresses,json=addresses" json:"Addresses,omitempty"`
	AssetInfo    *ProtoSyscoinTransaction_AssetInfoType `protobuf:"bytes,7,opt,name=AssetInfo,json=assetInfo" json:"AssetInfo,omitempty"`
}

func (m *ProtoSyscoinTransaction_VinType) Reset()         { *m = ProtoSyscoinTransaction_VinType{} }
func (m *ProtoSyscoinTransaction_VinType) String() string { return proto.CompactTextString(m) }
func (*ProtoSyscoinTransaction_VinType) ProtoMessage()    {}
func (*ProtoSyscoinTransaction_VinType) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 2}
}

func (m *ProtoSyscoinTransaction_VinType) GetCoinbase() string {
	if m != nil {
		return m.Coinbase
	}
	return ""
}

func (m *ProtoSyscoinTransaction_VinType) GetTxid() []byte {
	if m != nil {
		return m.Txid
	}
	return nil
}

func (m *ProtoSyscoinTransaction_VinType) GetVout() uint32 {
	if m != nil {
		return m.Vout
	}
	return 0
}

func (m *ProtoSyscoinTransaction_VinType) GetScriptSigHex() []byte {
	if m != nil {
		return m.ScriptSigHex
	}
	return nil
}

func (m *ProtoSyscoinTransaction_VinType) GetSequence() uint32 {
	if m != nil {
		return m.Sequence
	}
	return 0
}

func (m *ProtoSyscoinTransaction_VinType) GetAddresses() []string {
	if m != nil {
		return m.Addresses
	}
	return nil
}

func (m *ProtoSyscoinTransaction_VinType) GetAssetInfo() *ProtoSyscoinTransaction_AssetInfoType {
	if m != nil {
		return m.AssetInfo
	}
	return nil
}

type ProtoSyscoinTransaction_VoutType struct {
	ValueSat        []byte                                 `protobuf:"bytes,1,opt,name=ValueSat,json=valueSat,proto3" json:"ValueSat,omitempty"`
	N               uint32                                 `protobuf:"varint,2,opt,name=N,json=n" json:"N,omitempty"`
	ScriptPubKeyHex []byte                                 `protobuf:"bytes,3,opt,name=ScriptPubKeyHex,json=scriptPubKeyHex,proto3" json:"ScriptPubKeyHex,omitempty"`
	Addresses       []string                               `protobuf:"bytes,4,rep,name=Addresses,json=addresses" json:"Addresses,omitempty"`
	AssetInfo       *ProtoSyscoinTransaction_AssetInfoType `protobuf:"bytes,5,opt,name=AssetInfo,json=assetInfo" json:"AssetInfo,omitempty"`
}

func (m *ProtoSyscoinTransaction_VoutType) Reset()         { *m = ProtoSyscoinTransaction_VoutType{} }
func (m *ProtoSyscoinTransaction_VoutType) String() string { return proto.CompactTextString(m) }
func (*ProtoSyscoinTransaction_VoutType) ProtoMessage()    {}
func (*ProtoSyscoinTransaction_VoutType) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 3}
}

func (m *ProtoSyscoinTransaction_VoutType) GetValueSat() []byte {
	if m != nil {
		return m.ValueSat
	}
	return nil
}

func (m *ProtoSyscoinTransaction_VoutType) GetN() uint32 {
	if m != nil {
		return m.N
	}
	return 0
}

func (m *ProtoSyscoinTransaction_VoutType) GetScriptPubKeyHex() []byte {
	if m != nil {
		return m.ScriptPubKeyHex
	}
	return nil
}

func (m *ProtoSyscoinTransaction_VoutType) GetAddresses() []string {
	if m != nil {
		return m.Addresses
	}
	return nil
}

func (m *ProtoSyscoinTransaction_VoutType) GetAssetInfo() *ProtoSyscoinTransaction_AssetInfoType {
	if m != nil {
		return m.AssetInfo
	}
	return nil
}

func init() {
	proto.RegisterType((*ProtoSyscoinTransaction)(nil), "syscoin.ProtoSyscoinTransaction")
	proto.RegisterType((*ProtoSyscoinTransaction_AssetInfoDetailsType)(nil), "syscoin.ProtoSyscoinTransaction.AssetInfoDetailsType")
	proto.RegisterType((*ProtoSyscoinTransaction_AssetInfoType)(nil), "syscoin.ProtoSyscoinTransaction.AssetInfoType")
	proto.RegisterType((*ProtoSyscoinTransaction_VinType)(nil), "syscoin.ProtoSyscoinTransaction.VinType")
	proto.RegisterType((*ProtoSyscoinTransaction_VoutType)(nil), "syscoin.ProtoSyscoinTransaction.VoutType")
}

func init() { proto.RegisterFile("tx.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 486 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x93, 0xcb, 0x8e, 0xd3, 0x30,
	0x14, 0x86, 0xe5, 0x49, 0x9a, 0x8b, 0xa7, 0xd5, 0x20, 0x0b, 0x41, 0x14, 0xcd, 0x22, 0x9a, 0x55,
	0xd8, 0x64, 0x31, 0x88, 0x0d, 0x12, 0x0b, 0x60, 0x24, 0x06, 0x18, 0xc1, 0xc8, 0xa9, 0xb2, 0xcf,
	0xc5, 0x4c, 0x2d, 0x52, 0xbb, 0xc4, 0x4e, 0x95, 0xbe, 0x0a, 0x8f, 0xc4, 0x13, 0xf0, 0x2a, 0xec,
	0x90, 0x4f, 0x9c, 0x6a, 0x8a, 0x80, 0x22, 0xb1, 0xfc, 0x7f, 0xf7, 0x38, 0xfe, 0x3e, 0x9d, 0xe2,
	0x40, 0x0f, 0xd9, 0xa6, 0x93, 0x5a, 0x12, 0x5f, 0xed, 0x54, 0x2d, 0xb9, 0xb8, 0xf8, 0xee, 0xe3,
	0xc7, 0xb7, 0xa6, 0xca, 0xc7, 0x62, 0xd9, 0x95, 0x42, 0x95, 0xb5, 0xe6, 0x52, 0x10, 0x82, 0xdd,
	0xe5, 0xc0, 0x9b, 0x08, 0x25, 0x28, 0x9d, 0x53, 0x57, 0x0f, 0xbc, 0x21, 0x0f, 0xb0, 0x73, 0xcd,
	0x86, 0xe8, 0x04, 0x2a, 0x67, 0xc5, 0x06, 0x72, 0x8e, 0xc3, 0x57, 0xad, 0xac, 0x3f, 0x6b, 0xbe,
	0x66, 0x91, 0x93, 0xa0, 0xd4, 0xa5, 0x61, 0x35, 0x15, 0x24, 0xc6, 0xc1, 0xcd, 0x74, 0xe8, 0x26,
	0x28, 0x5d, 0xd0, 0x60, 0x7f, 0xf6, 0x08, 0x7b, 0xd7, 0x8c, 0xdf, 0xad, 0x74, 0x34, 0x83, 0x13,
	0x6f, 0x05, 0x89, 0x3c, 0xc7, 0x4e, 0xc1, 0x45, 0xe4, 0x25, 0x4e, 0x7a, 0x7a, 0x99, 0x66, 0xf6,
	0xa9, 0xd9, 0x1f, 0x9e, 0x99, 0x15, 0x5c, 0x2c, 0x77, 0x1b, 0x46, 0x9d, 0x2d, 0x17, 0xe4, 0x05,
	0x76, 0x0b, 0xd9, 0xeb, 0xc8, 0x87, 0xe1, 0x27, 0xc7, 0x87, 0x65, 0xaf, 0x61, 0xda, 0xdd, 0xca,
	0x5e, 0x93, 0x08, 0xfb, 0x05, 0xeb, 0x14, 0x97, 0x22, 0x0a, 0x12, 0x94, 0xce, 0xa8, 0xbf, 0x1d,
	0x63, 0xfc, 0x0e, 0x3f, 0x7c, 0xa9, 0x14, 0xd3, 0x6f, 0xc5, 0x27, 0x79, 0xc5, 0x74, 0xc9, 0x5b,
	0x65, 0xe6, 0x0c, 0x44, 0xbe, 0x5b, 0x57, 0xb2, 0x05, 0x4d, 0x21, 0xf5, 0x14, 0x24, 0x03, 0x7e,
	0xc5, 0x6a, 0xbe, 0x2e, 0x5b, 0x05, 0xb6, 0x66, 0x34, 0x68, 0x6c, 0x8e, 0xbf, 0x22, 0xbc, 0xd8,
	0x5f, 0x06, 0xb7, 0x9c, 0xe3, 0x10, 0x8a, 0x37, 0xbd, 0xf5, 0xbd, 0xa0, 0x61, 0x39, 0x15, 0xe6,
	0xae, 0xa2, 0x6c, 0x7b, 0x96, 0x97, 0xda, 0x9a, 0x0f, 0xb6, 0x36, 0x93, 0x8f, 0xd8, 0xb7, 0xcf,
	0x01, 0xf9, 0xa7, 0x97, 0xcf, 0x8e, 0x32, 0xff, 0x8e, 0x83, 0xfa, 0xcd, 0x18, 0xe2, 0x1f, 0x08,
	0xfb, 0x56, 0xa9, 0xf9, 0xf0, 0x6b, 0xc9, 0x45, 0x55, 0x2a, 0x66, 0xf1, 0x82, 0xda, 0xe6, 0xfd,
	0x76, 0x9c, 0xdc, 0xdb, 0x0e, 0x62, 0xed, 0x3b, 0x40, 0x30, 0x2a, 0xbd, 0xc0, 0xf3, 0xbc, 0xee,
	0xf8, 0x46, 0xe7, 0xfc, 0xce, 0xac, 0x8e, 0x0b, 0xbf, 0x9f, 0xab, 0x7b, 0x9d, 0xf9, 0x4e, 0xce,
	0xbe, 0xf4, 0x4c, 0xd4, 0xcc, 0xee, 0x42, 0xa0, 0x6c, 0x06, 0x35, 0x4d, 0xd3, 0x31, 0xa5, 0x98,
	0x82, 0x9d, 0x08, 0x69, 0x58, 0x4e, 0x05, 0xb9, 0xb1, 0xe2, 0x0c, 0x4e, 0xe4, 0x83, 0x80, 0xec,
	0xdf, 0x05, 0x00, 0xf9, 0x28, 0xda, 0xc4, 0xf8, 0x1b, 0xc2, 0xc1, 0xb4, 0x11, 0x07, 0xd6, 0xd1,
	0x2f, 0xd6, 0xe7, 0x18, 0x7d, 0x00, 0xf2, 0x05, 0x45, 0x82, 0xa4, 0xf8, 0x6c, 0x44, 0xbc, 0xed,
	0xab, 0xf7, 0x6c, 0x67, 0x28, 0x1d, 0x18, 0x38, 0x53, 0x87, 0xf5, 0x21, 0x8c, 0xfb, 0x57, 0x98,
	0xd9, 0x7f, 0xc2, 0x54, 0x1e, 0xfc, 0xd5, 0x9f, 0xfe, 0x0c, 0x00, 0x00, 0xff, 0xff, 0xce, 0x24,
	0xe9, 0x0f, 0xf6, 0x03, 0x00, 0x00,
}